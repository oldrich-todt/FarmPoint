name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
        dotnet-version: 7.0.x

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.dotnet-version }}
    - name: Generate dev cert
      run: openssl req -config localhost.conf -new -x509 -sha256 -newkey rsa:2048 -nodes -keyout localhost.key -days 3650 -out localhost.crt && openssl pkcs12 -export -out localhost.pfx -inkey localhost.key -in localhost.crt -passout pass:StrongPassword~1
    - name: Trust dev cert
      run: sudo cp localhost.crt /etc/ssl/certs && sudo cp localhost.key /etc/ssl/private
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore --configuration Release
    - name: Run mssql 2022
      run: sudo docker run -e "ACCEPT_EULA=Y" -e "MSSQL_SA_PASSWORD=StrongSAPassword1~!" -p 1433:1433 --name sql1 --hostname sql1 -d mcr.microsoft.com/mssql/server:2022-latest
    - name: Test
      run: dotnet test --logger html --results-directory "TestResults-${{ env.dotnet-version }}" --no-restore --configuration Release
      env:
        ConnectionStrings__DefaultConnection: Server=localhost;Database=FarmPointDb-Test;User Id=SA;Password=StrongSAPassword1~!;Encrypt=True;TrustServerCertificate=True;
        ASPNETCORE_Kestrel__Certificates__Default__Path: /etc/ssl/certs/localhost.cer;
        ASPNETCORE_Kestrel__Certificates__Default__KeyPath: /etc/ssl/private/localhost.key;
    - name: Upload test results
      uses: actions/upload-artifact@v3
      with:
        name: dotnet-results-${{ env.dotnet-version }}
        path: TestResults-${{ env.dotnet-version }}
      if: ${{ always() }}
